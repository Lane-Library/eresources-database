<?xml version="1.0" encoding="UTF-8"?>
<stx:transform xmlns:stx="http://stx.sourceforge.net/2002/ns"
    version="1.0"
    pass-through="none">
    
    <stx:variable name="pmid"/>
    <stx:variable name="title"/>
    <stx:variable name="vernacularTitle"/>
    <stx:variable name="keywords"/>
    <stx:variable name="mesh"/>
    <stx:variable name="description"/>
    <stx:variable name="publicationDate"/>
    <stx:variable name="publicationIssue"/>
    <stx:variable name="publicationPages"/>
    <stx:variable name="publicationNlmId"/>
    <stx:variable name="publicationTitle"/>
    <stx:variable name="publicationType"/>
    <stx:variable name="publicationVolume"/>
    <stx:variable name="publicationYear"/>
    <stx:variable name="authorIndex"/>
    <stx:variable name="authors"/>
    <stx:variable name="authorsFromSplitInitials"/>
    <stx:variable name="authorsFull"/>
    <stx:variable name="authorsPreviousLN"/>
    <stx:variable name="authorsText"/>
    <stx:variable name="languages"/>
    
    <stx:template match="PubmedArticle">
        <stx:assign name="pmid" select="''"/>
        <stx:assign name="title" select="''"/>
        <stx:assign name="vernacularTitle" select="''"/>
        <stx:assign name="keywords" select="''"/>
        <stx:assign name="mesh" select="''"/>
        <stx:assign name="description" select="''"/>
        <stx:assign name="publicationDate" select="''"/>
        <stx:assign name="publicationIssue" select="''"/>
        <stx:assign name="publicationPages" select="''"/>
        <stx:assign name="publicationNlmId" select="''"/>
        <stx:assign name="publicationTitle" select="''"/>
        <stx:assign name="publicationType" select="''"/>
        <stx:assign name="publicationVolume" select="''"/>
        <stx:assign name="publicationYear" select="''"/>
        <stx:assign name="authorIndex" select="0"/>
        <stx:assign name="authors" select="''"/>
        <stx:assign name="authorsFromSplitInitials" select="''"/>
        <stx:assign name="authorsFull" select="''"/>
        <stx:assign name="authorsPreviousLN" select="''"/>
        <stx:assign name="authorsText" select="''"/>
        <stx:assign name="languages" select="''"/>
        <stx:process-children/>
        <stx:if test="matches($publicationDate,'^\d{4} ?')">
            <stx:assign name="publicationYear" select="substring($publicationDate,1,4)"/>
        </stx:if>
        
        <eresource id="pubmed-{$pmid}" recordId="{$pmid}" type="pubmed" update="19690101000000">
            <type>Articles</type>
            <primaryType>Articles</primaryType>
            <stx:assign name="title">
                <stx:choose>
                    <stx:when test="$vernacularTitle != ''">
                        <stx:value-of select="concat($vernacularTitle, ' ', $title)"/>
                    </stx:when>
                    <stx:when test="normalize-space($title) = ''">[No title available]</stx:when>
                    <stx:otherwise>
                        <stx:value-of select="$title"/>
                    </stx:otherwise>
                </stx:choose>
            </stx:assign>
            <title><stx:value-of select="$title"/></title>
            <stx:if test="$description != ''">
                <er-description><stx:value-of select="$description"/></er-description>
            </stx:if>
            <version>
                <link>
                    <url><stx:value-of select="concat('http://sfx.stanford.edu/local?sid=stanford:laneweb-search-pubmed&amp;id=pmid:', $pmid)"/></url>
                </link>
            </version>
            <stx:for-each-item name="heading" select="tokenize($mesh, ':::')">
                <stx:assign name="keywords" select="concat($keywords, ' ', $heading)"/>
                <mesh><stx:value-of select="$heading"/></mesh>
            </stx:for-each-item>
            <stx:if test="$publicationDate != ''">
                <publicationDate><stx:value-of select="normalize-space($publicationDate)"/></publicationDate>
            </stx:if>
            <stx:if test="$publicationYear != ''">
                <year><stx:value-of select="$publicationYear"/></year>
            </stx:if>
            <stx:if test="$publicationIssue != ''">
                <publicationIssue><stx:value-of select="$publicationIssue"/></publicationIssue>
            </stx:if>
            <stx:if test="$publicationPages != ''">
                <publicationPages><stx:value-of select="$publicationPages"/></publicationPages>
            </stx:if>
            <stx:if test="$publicationTitle != ''">
                <publicationTitle><stx:value-of select="$publicationTitle"/></publicationTitle>
            </stx:if>
            <stx:if test="$publicationVolume != ''">
                <publicationVolume><stx:value-of select="$publicationVolume"/></publicationVolume>
            </stx:if>
            <stx:for-each-item name="ptype" select="tokenize($publicationType, ':::')">
                <stx:assign name="keywords" select="concat($keywords, ' ', $ptype)"/>
                <publicationType><stx:value-of select="$ptype"/></publicationType>
            </stx:for-each-item>
            <stx:for-each-item name="author" select="tokenize($authors, ':::')">
                <publicationAuthor><stx:value-of select="$author"/></publicationAuthor>
            </stx:for-each-item>
            <stx:for-each-item name="author" select="tokenize($authorsFull, ':::')">
                <publicationAuthor><stx:value-of select="$author"/></publicationAuthor>
            </stx:for-each-item>
            <stx:for-each-item name="author" select="tokenize($authorsFromSplitInitials, ':::')">
                <publicationAuthor><stx:value-of select="$author"/></publicationAuthor>
            </stx:for-each-item>
            <stx:assign name="authorIndex" select="count(tokenize($authors, ':::'))"/>
            <stx:for-each-item name="author" select="tokenize($authors, ':::')">
                <stx:assign name="authorIndex" select="$authorIndex - 1"/>
                <stx:choose>
                    <stx:when test="$authorIndex = 0">
                        <stx:assign name="authorsText" select="concat($authorsText, $author, '.')"/>
                    </stx:when>
                    <stx:otherwise>
                        <stx:assign name="authorsText" select="concat($authorsText, $author, ', ')"/>
                    </stx:otherwise>
                </stx:choose>
            </stx:for-each-item>
            <publicationAuthorsText><stx:value-of select="$authorsText"/></publicationAuthorsText>
            <stx:for-each-item name="lang" select="tokenize($languages, ':::')">
                <publicationLanguage><stx:value-of select="$lang"/></publicationLanguage>
            </stx:for-each-item>
            <stx:assign name="keywords" select="concat($keywords, ' ', $title)"/>
            <stx:assign name="keywords" select="concat($keywords, ' ', $description)"/>
            <stx:assign name="keywords" select="concat($keywords, ' ', $authorsText)"/>
            <stx:for-each-item name="author" select="tokenize($authorsFull, ':::')">
                <stx:assign name="keywords" select="concat($keywords, ' ', substring-after($author,', '))"/>
            </stx:for-each-item>
            <stx:for-each-item name="author" select="tokenize($authorsFromSplitInitials, ':::')">
                <stx:assign name="keywords" select="concat($keywords, ' ', $author)"/>
            </stx:for-each-item>
            <!-- duplicated when publicationText added to keywords in SolrEresourceHandler; 
                 date, vol, etc are also duplicated but they are useful broken out like this
            <stx:assign name="keywords" select="concat($keywords, ' ', $publicationTitle)"/>
            -->
            <stx:assign name="keywords" select="concat($keywords, ' ', $publicationDate)"/>
            <stx:assign name="keywords" select="concat($keywords, ' ', $publicationVolume)"/>
            <stx:assign name="keywords" select="concat($keywords, ' ', $publicationIssue)"/>
            <stx:assign name="keywords" select="concat($keywords, ' ', $publicationPages)"/>
            <stx:assign name="keywords" select="concat($keywords, ' ', jpp:parseEndPages($publicationPages))" xmlns:jpp="java:edu.stanford.irt.eresources.PagesParser" />
            <stx:if test="$publicationNlmId != ''">
                <stx:assign name="keywords" select="concat($keywords, ' ', $publicationNlmId, ' ', jmm:getJournalTitles($publicationNlmId))" xmlns:jmm="java:edu.stanford.lane.journals.JournalMapManager" />
            </stx:if>
            <keywords><stx:value-of select="normalize-space($keywords)"/></keywords>
        </eresource>
        <stx:text>&#10;</stx:text>
    </stx:template>
    
    <stx:template match="*">
        <!-- fields not otherwise indexed get added to keywords here
            fields to skip as per NCBI: http://www.ncbi.nlm.nih.gov/books/NBK3827/#pubmedhelp.All_Fields_ALL
            "Place of Publication, Transliterated Title, Create Date, Completion Date, Entrez Date, MeSH Date, and Modification Date"
        -->
        <stx:choose>
            <stx:when test="contains('ArticleId|ELocationID',name(.))">
                <!--  prepend id-type to data for better search support: e.g. doi:10.foo, pii:3917, etc. -->
                <stx:variable name="id-label" select="concat(@IdType,@EIdType)"/>
                <stx:assign name="keywords" select="concat($keywords, ' ', replace($id-label,'pubmed','pmid'),':', .)"/>
            </stx:when>
            <stx:when test="not(contains('Year|Month|Day|Hour|Minute|Country|CopyrightInformation',name(.)))">
                <stx:assign name="keywords" select="concat($keywords, ' ', .)"/>
            </stx:when>
        </stx:choose>
        <stx:process-children/>
    </stx:template>
            
    <stx:template match="MedlineCitation/PMID">
        <stx:assign name="pmid" select="."/>
        <stx:process-children/>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/ArticleTitle//text()">
        <stx:assign name="title" select="concat($title,.)"/>
        <stx:process-children/>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/VernacularTitle//text()">
        <!-- don't add vernacularTitle if it just duplicates title -->
        <stx:if test=". != replace($title,'(\[|\])','')">
	        <stx:assign name="vernacularTitle" select="concat($vernacularTitle,.)"/>
        </stx:if>
        <stx:process-children/>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/Journal/JournalIssue/Issue">
        <stx:assign name="publicationIssue" select="."/>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/Pagination/MedlinePgn">
        <stx:assign name="publicationPages" select="."/>
    </stx:template>

    <stx:template match="MedlineCitation/Article/Journal/ISOAbbreviation">
        <stx:assign name="publicationTitle" select="replace(.,'\.','')"/>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/Journal/JournalIssue/Volume">
        <stx:assign name="publicationVolume" select="."/>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/Journal/JournalIssue/PubDate/*">
        <stx:choose>
            <stx:when test="name(.) = 'MedlineDate'">
                <stx:assign name="publicationDate" select="."/>
            </stx:when>
            <stx:otherwise>
                <stx:assign name="publicationDate" select="concat($publicationDate, ., ' ')"/>
            </stx:otherwise>
        </stx:choose>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/Abstract/AbstractText">
            <stx:process-attributes/>
            <stx:process-children/>
    </stx:template>

    <stx:template match="MedlineCitation/Article/Abstract/AbstractText/@Label">
        <stx:assign name="description" select="concat($description,'::',.,'##')"/>
    </stx:template>

    <stx:template match="MedlineCitation/Article/Abstract/AbstractText//text()">
        <stx:assign name="description" select="concat($description, .)"/>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/AuthorList/Author/LastName|MedlineCitation/Article/AuthorList/Author/CollectiveName">
        <stx:if test="name(.) = 'LastName'">
           <stx:assign name="authorsPreviousLN" select="."/>
        </stx:if>
        <stx:choose>
            <stx:when test="$authors = ''">
                <stx:assign name="authors" select="."/>
            </stx:when>
            <stx:otherwise>
                <stx:assign name="authors" select="concat($authors, ':::', .)"/>
            </stx:otherwise>
        </stx:choose>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/AuthorList/Author/ForeName">
        <stx:choose>
            <!-- skip forenames that are a single initial -->
            <stx:when test="string-length(.) = 1"/>
            <!-- skip forenames that are just 2 initials but add them to keywords to support single initial searching: Fineberg H -->
            <stx:when test="string-length(.) = 3 and contains(.,' ')">
                <stx:assign name="keywords" select="concat($keywords, ' ', .)"/>
            </stx:when>
            <stx:when test="$authorsFull = ''">
                <stx:assign name="authorsFull" select="concat($authorsPreviousLN, ', ', .)"/>
            </stx:when>
            <stx:otherwise>
                <stx:assign name="authorsFull" select="concat($authorsFull, ':::', $authorsPreviousLN, ', ', .)"/>
            </stx:otherwise>
        </stx:choose>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/AuthorList/Author/Initials">
        <stx:assign name="authors" select="concat($authors, ' ', .)"/>
        <stx:if test="string-length(.) > 1">
            <stx:choose>
                <stx:when test="$authorsFromSplitInitials = ''">
                    <stx:assign name="authorsFromSplitInitials" select="concat($authorsPreviousLN, ' ', substring(.,1,1))"/>
                </stx:when>
                <stx:otherwise>
                    <stx:assign name="authorsFromSplitInitials" select="concat($authorsFromSplitInitials, ':::', $authorsPreviousLN, ' ', substring(.,1,1))"/>
                </stx:otherwise>
            </stx:choose>
        </stx:if>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/PublicationTypeList/PublicationType">
        <stx:if test="string:toLowerCase(.) != 'journal article'" xmlns:string="java:java.lang.String">
            <stx:choose>
                <stx:when test="$publicationType = ''">
                    <stx:assign name="publicationType" select="."/>
                </stx:when>
                <stx:otherwise>
                    <stx:assign name="publicationType" select="concat($publicationType, ':::', .)"/>
                </stx:otherwise>
            </stx:choose>
        </stx:if>
        <stx:process-children/>
    </stx:template>
    
    <stx:template match="MedlineCitation/MeshHeadingList/MeshHeading/DescriptorName">
        <stx:choose>
            <stx:when test="$mesh = ''">
                <stx:assign name="mesh" select="."/>
            </stx:when>
            <stx:otherwise>
                <stx:assign name="mesh" select="concat($mesh, ':::', .)"/>
            </stx:otherwise>
        </stx:choose>
        <stx:process-children/>
    </stx:template>
    
    <stx:template match="MedlineCitation/Article/Language">
        <stx:choose>
            <stx:when test="$languages = ''">
                <stx:assign name="languages" select="."/>
            </stx:when>
            <stx:otherwise>
                <stx:assign name="languages" select="concat($languages, ':::', .)"/>
            </stx:otherwise>
        </stx:choose>
        <stx:process-children/>
    </stx:template>
    
    <!-- delete comments and corrections that are NOT RectractionIn, PartialRectractionIn or ErratumIn -->
    <stx:template match="MedlineCitation/CommentsCorrectionsList/CommentsCorrections[not(contains('PartialRetractionIn,RetractionIn,ErratumIn',@RefType))]"/>
        
    <stx:template match="MedlineCitation/CommentsCorrectionsList/CommentsCorrections[contains('PartialRetractionIn,RetractionIn,ErratumIn',@RefType)]">
        <stx:variable name="childNodesAsText">
            <stx:process-children/>
        </stx:variable>
        <!--  limit to CommentsCorrections with a PMID element -->
        <stx:if test="contains($childNodesAsText,'PMID')">
            <stx:variable name="label">
                <stx:choose>
                    <stx:when test="@RefType = 'ErratumIn'">Erratum in</stx:when>
                    <stx:when test="@RefType = 'RetractionIn'">Retraction in</stx:when>
                    <stx:when test="@RefType = 'PartialRetractionIn'">Partial retraction in</stx:when>
                </stx:choose>
            </stx:variable>
            <stx:assign name="title" select="concat($title, ' [', $label, ': ', $childNodesAsText, ']')"/>
        </stx:if>
    </stx:template>
    
    <stx:template match="MedlineCitation/CommentsCorrectionsList/CommentsCorrections/RefSource">
        <stx:value-of select="."/>
    </stx:template>
    
    <stx:template match="MedlineCitation/CommentsCorrectionsList/CommentsCorrections/PMID">
        <stx:value-of select="concat(' PMID:', .)"/>
    </stx:template>
    
    <stx:template match="MedlineCitation/MedlineJournalInfo/NlmUniqueID">
        <stx:assign name="publicationNlmId" select="."/>
    </stx:template>
    
    <stx:template match="DeleteCitation/PMID">
        <eresource id="pubmed-{.}" recordId="{.}" type="pubmed" update="19690101000000">
            <type>article</type>
        </eresource>
    </stx:template>
    
</stx:transform>
